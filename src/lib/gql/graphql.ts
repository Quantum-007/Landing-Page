/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded date */
  ISO8601Date: { input: any; output: any; }
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: { input: any; output: any; }
  /** Represents untyped JSON */
  JSON: { input: any; output: any; }
};

export type Account = {
  __typename?: 'Account';
  cuisineLabels?: Maybe<Array<CuisineLabel>>;
  id: Scalars['ID']['output'];
  logoUrl?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
};

export type AdminCohortLogin = {
  __typename?: 'AdminCohortLogin';
  email: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  jwtToken: Scalars['String']['output'];
  name: Scalars['String']['output'];
  phone?: Maybe<Scalars['String']['output']>;
};

export type AdminLogin = {
  email?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
};

export type AdminLoginError = {
  __typename?: 'AdminLoginError';
  message?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of AdminLogin */
export type AdminLoginInput = {
  attributes: AdminLogin;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of AdminLogin */
export type AdminLoginPayload = {
  __typename?: 'AdminLoginPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  error?: Maybe<AdminLoginError>;
  user?: Maybe<AdminCohortLogin>;
};

export type Allergen = {
  __typename?: 'Allergen';
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type BlueCollarCheckoutConfig = {
  __typename?: 'BlueCollarCheckoutConfig';
  blueCollarConfig: BlueCollarConfig;
  customerDollarCredits: Scalars['Float']['output'];
  discountPercentage: Scalars['Float']['output'];
  freightDeliverySizes: Array<FreightDeliverySize>;
  rainCheckPercentage: Scalars['Float']['output'];
};

export type BlueCollarConfig = {
  __typename?: 'BlueCollarConfig';
  defaultTip: Scalars['Float']['output'];
  lowIncomeThreshold: Scalars['Int']['output'];
  maxTip: Scalars['Float']['output'];
  maximumItemsCount: Scalars['Int']['output'];
  minTip: Scalars['Float']['output'];
  minimumItemsCount: Scalars['Int']['output'];
};

export type BlueCollarMenuItemReview = {
  __typename?: 'BlueCollarMenuItemReview';
  createdAt: Scalars['ISO8601Date']['output'];
  customer?: Maybe<Customer>;
  customerName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  starRating: Scalars['Float']['output'];
};

export type BulkCohortItemsResponse = {
  __typename?: 'BulkCohortItemsResponse';
  nodes: Array<Customer>;
  totalCount: Scalars['Int']['output'];
};

export type BulkMenuItem = {
  __typename?: 'BulkMenuItem';
  blueCollarMenuItemReviews?: Maybe<Array<BlueCollarMenuItemReview>>;
  bulkOrderSection: BulkOrderSection;
  chef?: Maybe<Chef>;
  cuisine?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  dietaryPreference?: Maybe<Scalars['String']['output']>;
  firstOrderDiscount?: Maybe<Scalars['Boolean']['output']>;
  firstOrderPrice?: Maybe<Scalars['Float']['output']>;
  id: Scalars['ID']['output'];
  imageUrl?: Maybe<Scalars['String']['output']>;
  ingredients?: Maybe<Array<Ingredient>>;
  name?: Maybe<Scalars['String']['output']>;
  numberOfReviews?: Maybe<Scalars['Int']['output']>;
  numberOfStars?: Maybe<Scalars['Float']['output']>;
  nutritionalUrl?: Maybe<Scalars['String']['output']>;
  regularPrice?: Maybe<Scalars['Float']['output']>;
  sizeInGrams?: Maybe<Scalars['Float']['output']>;
  sizeInOunces?: Maybe<Scalars['Float']['output']>;
};


export type BulkMenuItemImageUrlArgs = {
  variant?: InputMaybe<ImageVariant>;
};


export type BulkMenuItemNutritionalUrlArgs = {
  variant?: InputMaybe<ImageVariant>;
};

export type BulkMenuItemsResponse = {
  __typename?: 'BulkMenuItemsResponse';
  nodes: Array<BulkMenuItem>;
  totalCount: Scalars['Int']['output'];
};

export type BulkOrderMenu = {
  __typename?: 'BulkOrderMenu';
  description: Scalars['String']['output'];
  filterOptions: MenuItemFilters;
  id: Scalars['ID']['output'];
  minimumOrder: Scalars['Int']['output'];
  sections: Array<BulkOrderSection>;
  sortOptions: Array<BulkOrderSortEnum>;
  subDescription: Scalars['String']['output'];
  title: Scalars['String']['output'];
};


export type BulkOrderMenuSectionsArgs = {
  sortBy?: InputMaybe<BulkOrderSortEnum>;
};

export type BulkOrderSection = {
  __typename?: 'BulkOrderSection';
  bulkMenuItems?: Maybe<BulkMenuItemsResponse>;
  description?: Maybe<Scalars['String']['output']>;
  distinctionProtein?: Maybe<Scalars['String']['output']>;
  distinctionWeight?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};


export type BulkOrderSectionBulkMenuItemsArgs = {
  cuisines?: InputMaybe<Array<Scalars['String']['input']>>;
  dietaryPreferences?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  showTopRated?: InputMaybe<Scalars['Boolean']['input']>;
  sortBy?: InputMaybe<BulkOrderSortEnum>;
};

export enum BulkOrderSortEnum {
  PriceHighLow = 'PRICE_HIGH_LOW',
  PriceLowHigh = 'PRICE_LOW_HIGH',
  RatingHighLow = 'RATING_HIGH_LOW'
}

/** Attributes for creating storefront Burq Up order */
export type BurqOrderAttributes = {
  /** Storefront Order customer ID */
  customerId?: InputMaybe<Scalars['ID']['input']>;
  /** Delivery Address */
  deliveryAddress?: InputMaybe<Scalars['String']['input']>;
  /** Storefront Burq Up Order items */
  deliveryItemDetails?: InputMaybe<Array<DeliveryItemDetailAttributes>>;
  /** Pickup Address */
  pickupAddress?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of Cancel */
export type CancelInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderId: Scalars['ID']['input'];
  reason?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CancelParcelDeliveryOrder */
export type CancelParcelDeliveryOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  parcelDeliveryOrderId: Scalars['ID']['input'];
};

export type CareerRequest = {
  attachmentId?: InputMaybe<Scalars['ID']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
};

export type Chef = {
  __typename?: 'Chef';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  profileImageUrl?: Maybe<Scalars['String']['output']>;
};


export type ChefProfileImageUrlArgs = {
  variant?: InputMaybe<ImageVariant>;
};

export enum CityEnum {
  La = 'LA',
  LasVegas = 'LAS_VEGAS',
  Ny = 'NY',
  Orlando = 'ORLANDO',
  Sf = 'SF'
}

export type Cohort = {
  __typename?: 'Cohort';
  cohortScheduler?: Maybe<CohortScheduler>;
  conditions: Scalars['JSON']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type CohortInput = {
  conditions: Scalars['JSON']['input'];
  name: Scalars['String']['input'];
};

export type CohortScheduler = {
  __typename?: 'CohortScheduler';
  day: Scalars['String']['output'];
  frequency: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  message: Scalars['String']['output'];
  name: Scalars['String']['output'];
  time: Scalars['String']['output'];
};

export type CohortSchedulerInput = {
  cohortId: Scalars['ID']['input'];
  day?: InputMaybe<Scalars['String']['input']>;
  frequency: Scalars['String']['input'];
  message: Scalars['String']['input'];
  name: Scalars['String']['input'];
  time: Scalars['String']['input'];
};

export type Config = {
  __typename?: 'Config';
  merchantIdentifier: Scalars['String']['output'];
  publishableKey: Scalars['String']['output'];
};

export type CreateBlueCollarSupportRequestAttributes = {
  attachmentsIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  email: Scalars['String']['input'];
  helpTopicId: Scalars['ID']['input'];
  message: Scalars['String']['input'];
};

/** Autogenerated input type of CreateBlueCollarSupportRequest */
export type CreateBlueCollarSupportRequestInput = {
  attributes: CreateBlueCollarSupportRequestAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateBurqOrder */
export type CreateBurqOrderInput = {
  attributes: BurqOrderAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateCareerRequest */
export type CreateCareerRequestInput = {
  attributes: CareerRequest;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateCareerRequest */
export type CreateCareerRequestPayload = {
  __typename?: 'CreateCareerRequestPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateCohort */
export type CreateCohortInput = {
  attributes: CohortInput;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateCohort */
export type CreateCohortPayload = {
  __typename?: 'CreateCohortPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  cohort?: Maybe<Cohort>;
  errors: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of CreateCohortScheduler */
export type CreateCohortSchedulerInput = {
  attributes: CohortSchedulerInput;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateCohortScheduler */
export type CreateCohortSchedulerPayload = {
  __typename?: 'CreateCohortSchedulerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  cohortScheduler?: Maybe<CohortScheduler>;
  errors: Array<Scalars['String']['output']>;
};

/** Attributes for creating quntum contact info */
export type CreateGeneralInqueryAttributes = {
  /** Company name of the customer */
  company?: InputMaybe<Scalars['String']['input']>;
  /** Industry name of the customer */
  consent?: InputMaybe<Scalars['Boolean']['input']>;
  /** Email of the customer */
  email?: InputMaybe<Scalars['String']['input']>;
  /** Description of the query */
  message?: InputMaybe<Scalars['String']['input']>;
  /** Name of the customer */
  name?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateGeneralInquery */
export type CreateGeneralInqueryInput = {
  attributes: CreateGeneralInqueryAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateGeneralInquery */
export type CreateGeneralInqueryPayload = {
  __typename?: 'CreateGeneralInqueryPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateMarketingDetail */
export type CreateMarketingDetailInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
};

/** Autogenerated return type of CreateMarketingDetail */
export type CreateMarketingDetailPayload = {
  __typename?: 'CreateMarketingDetailPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateNewMenuItemRequest */
export type CreateNewMenuItemRequestInput = {
  additionalComment?: InputMaybe<Scalars['String']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  cuisine: Scalars['String']['input'];
  itemName: Scalars['String']['input'];
};

/** Autogenerated return type of CreateNewMenuItemRequest */
export type CreateNewMenuItemRequestPayload = {
  __typename?: 'CreateNewMenuItemRequestPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateOrder */
export type CreateOrderInput = {
  attributes: OrderAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateParcelDeliveryOrder */
export type CreateParcelDeliveryOrderInput = {
  attributes: ParcelDeliveryOrderAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateParcelDeliveryStripePaymentParams */
export type CreateParcelDeliveryStripePaymentParamsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  parcelDeliveryOrderId: Scalars['ID']['input'];
};

/** Autogenerated return type of CreateParcelDeliveryStripePaymentParams */
export type CreateParcelDeliveryStripePaymentParamsPayload = {
  __typename?: 'CreateParcelDeliveryStripePaymentParamsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  error?: Maybe<Scalars['String']['output']>;
  paymentIntent: Scalars['String']['output'];
};

export type CreatePilotProgramInfoAttributes = {
  additionalNotes?: InputMaybe<Scalars['String']['input']>;
  automationLevel: Scalars['Int']['input'];
  challenges?: InputMaybe<Array<Scalars['String']['input']>>;
  company?: InputMaybe<Scalars['String']['input']>;
  consent: Scalars['Boolean']['input'];
  currentSystems?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  implementationTimeline?: InputMaybe<Scalars['String']['input']>;
  industry?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  operationSize?: InputMaybe<Scalars['String']['input']>;
  roboticSolutions?: InputMaybe<Array<Scalars['String']['input']>>;
  roiTimeframe: Scalars['Int']['input'];
  specificChallanges?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreatePilotProgramInfo */
export type CreatePilotProgramInfoInput = {
  attributes: CreatePilotProgramInfoAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreatePilotProgramInfo */
export type CreatePilotProgramInfoPayload = {
  __typename?: 'CreatePilotProgramInfoPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateStorefrontDeliveryOrder */
export type CreateStorefrontDeliveryOrderInput = {
  attributes: DeliveryOrderAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateStorefrontPickupOrder */
export type CreateStorefrontPickupOrderInput = {
  attributes: PickupOrderAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateStorefrontStripePaymentParams */
export type CreateStorefrontStripePaymentParamsInput = {
  attributes: StorefrontPaymentParamsInput;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateStorefrontStripePaymentParams */
export type CreateStorefrontStripePaymentParamsPayload = {
  __typename?: 'CreateStorefrontStripePaymentParamsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  error?: Maybe<Scalars['String']['output']>;
  paymentIntent: Scalars['String']['output'];
};

export type CreateStorefrontSupportRequestAttributes = {
  email: Scalars['String']['input'];
  helpTopicId: Scalars['ID']['input'];
  message: Scalars['String']['input'];
  mobilePhone: Scalars['String']['input'];
  name: Scalars['String']['input'];
  orderNumber: Scalars['String']['input'];
};

/** Autogenerated input type of CreateStorefrontSupportRequest */
export type CreateStorefrontSupportRequestInput = {
  attributes: CreateStorefrontSupportRequestAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateStorefrontSupportRequest */
export type CreateStorefrontSupportRequestPayload = {
  __typename?: 'CreateStorefrontSupportRequestPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

/** Autogenerated input type of CreateStripePaymentParams */
export type CreateStripePaymentParamsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderId: Scalars['ID']['input'];
  payAmount: Scalars['Float']['input'];
};

export type Cuisine = {
  __typename?: 'Cuisine';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type CuisineLabel = {
  __typename?: 'CuisineLabel';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type Customer = {
  __typename?: 'Customer';
  address: Scalars['String']['output'];
  cancelledParcelDeliveryOrdersCount: Scalars['Int']['output'];
  completedParcelDeliveryOrdersCount: Scalars['Int']['output'];
  createdAt: Scalars['ISO8601Date']['output'];
  customerDollarCredits?: Maybe<Scalars['Float']['output']>;
  customerMealCredits?: Maybe<Scalars['Float']['output']>;
  distanceToHotspotInMiles?: Maybe<Scalars['Float']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  firstOrderDiscount: Scalars['Boolean']['output'];
  followsSocialMedia: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
  mobilePhone?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  optInEmail: Scalars['Boolean']['output'];
  optInPush: Scalars['Boolean']['output'];
  optInSms: Scalars['Boolean']['output'];
  packedParcelDeliveryOrdersCount: Scalars['Int']['output'];
  paidOrdersCount: Scalars['Int']['output'];
  paidParcelDeliveryOrdersCount: Scalars['Int']['output'];
  referralLink?: Maybe<Scalars['String']['output']>;
  refundedParcelDeliveryOrdersCount: Scalars['Int']['output'];
  shippedParcelDeliveryOrdersCount: Scalars['Int']['output'];
};

export type CustomerVerificationBulkOrderCode = {
  __typename?: 'CustomerVerificationBulkOrderCode';
  actionType: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  optInEmail: Scalars['Boolean']['output'];
  optInSms: Scalars['Boolean']['output'];
};

export type CustomerVerificationCode = {
  __typename?: 'CustomerVerificationCode';
  id: Scalars['ID']['output'];
};

/** Payload for deducting user credits against parcel delivery orders */
export type DeductUserCredits = {
  __typename?: 'DeductUserCredits';
  errors?: Maybe<Array<Scalars['String']['output']>>;
  success: Scalars['Boolean']['output'];
};

export type DefaultStorefrontHotspotMenuItem = {
  __typename?: 'DefaultStorefrontHotspotMenuItem';
  id: Scalars['ID']['output'];
  imageUrl?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  price: Scalars['Float']['output'];
  sectionId: Scalars['ID']['output'];
  sectionName: Scalars['String']['output'];
  videoUrl?: Maybe<Scalars['String']['output']>;
};


export type DefaultStorefrontHotspotMenuItemImageUrlArgs = {
  variant?: InputMaybe<ImageVariant>;
};

/** Autogenerated input type of DeleteCohort */
export type DeleteCohortInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteCohort */
export type DeleteCohortPayload = {
  __typename?: 'DeleteCohortPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of DeleteCohortScheduler */
export type DeleteCohortSchedulerInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteCohortScheduler */
export type DeleteCohortSchedulerPayload = {
  __typename?: 'DeleteCohortSchedulerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of Delete */
export type DeleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Attributes for storefront Burq Up delivery order items */
export type DeliveryItemDetailAttributes = {
  /** Name of the item */
  name: Scalars['String']['input'];
  /** Item quantity */
  quantity: Scalars['Int']['input'];
  /** Item size */
  size: Scalars['String']['input'];
};

export type DeliveryOrder = {
  __typename?: 'DeliveryOrder';
  burqOrderId: Scalars['String']['output'];
  cancelledAt?: Maybe<Scalars['ISO8601Date']['output']>;
  credits?: Maybe<Scalars['Float']['output']>;
  deliveryAddress: Scalars['String']['output'];
  deliveryDate: Scalars['String']['output'];
  deliveryFee: Scalars['Float']['output'];
  deliveryTime: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  orderDate?: Maybe<Scalars['ISO8601Date']['output']>;
  pickupAddress: Scalars['String']['output'];
  sourceId: Scalars['ID']['output'];
  sourceType: Scalars['String']['output'];
  status: Scalars['String']['output'];
  storefrontHotspotTimeId: Scalars['ID']['output'];
  storefrontOrderItems: Array<StorefrontOrderItem>;
  subTotal: Scalars['Float']['output'];
  taxAmount?: Maybe<Scalars['Float']['output']>;
  tips?: Maybe<Scalars['Float']['output']>;
  total?: Maybe<Scalars['Float']['output']>;
  trackingUrl: Scalars['String']['output'];
};

/** Attributes for creating storefront delivery order */
export type DeliveryOrderAttributes = {
  /** Burq up order delivery ID */
  burqOrderId: Scalars['String']['input'];
  /** Credits Amount */
  credits?: InputMaybe<Scalars['Float']['input']>;
  /** Delivery address */
  deliveryAddress: Scalars['String']['input'];
  /** Delivery date */
  deliveryDate: Scalars['String']['input'];
  /** Delivery Fee */
  deliveryFee: Scalars['Float']['input'];
  /** Delivery time */
  deliveryTime: Scalars['String']['input'];
  /** Guest Customer Info */
  guestCustomerDetails: GuestCustomerAttributes;
  /** Hotspot Time id */
  hotspotTimeId: Scalars['ID']['input'];
  /** Storefront Order ID (only for update) */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Order date */
  orderDate: Scalars['String']['input'];
  /** Pickup address */
  pickupAddress: Scalars['String']['input'];
  pickupTime: Scalars['String']['input'];
  /** Storefront Order items */
  storefrontOrderItems: Array<StorefrontOrderItemAttributes>;
  /** Tax Amount */
  taxAmount: Scalars['Float']['input'];
  /** Tips Amount */
  tips: Scalars['Float']['input'];
  /** Order delivery tracking url */
  trackingUrl: Scalars['String']['input'];
};

export enum DeviceOsEnumFilter {
  Android = 'ANDROID',
  Ios = 'IOS',
  Web = 'WEB'
}

export type DeviceToken = {
  __typename?: 'DeviceToken';
  email?: Maybe<Scalars['String']['output']>;
  firstOrderDiscount: Scalars['Boolean']['output'];
  followsSocialMedia: Scalars['Boolean']['output'];
  guest: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  isFirstOrderPaid: Scalars['Boolean']['output'];
  jwtToken: Scalars['String']['output'];
  mobilePhone?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  optInEmail?: Maybe<Scalars['Boolean']['output']>;
  optInSms?: Maybe<Scalars['Boolean']['output']>;
  origin?: Maybe<Scalars['String']['output']>;
  paidOrdersCount: Scalars['Int']['output'];
  referrerId?: Maybe<Scalars['ID']['output']>;
  showWelcomeScreen: Scalars['Boolean']['output'];
  signedUp: Scalars['Boolean']['output'];
};

export type DeviceTokenTypeWeb = {
  __typename?: 'DeviceTokenTypeWeb';
  email?: Maybe<Scalars['String']['output']>;
  firstOrderDiscount: Scalars['Boolean']['output'];
  followsSocialMedia: Scalars['Boolean']['output'];
  guest: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  isFirstOrderPaid: Scalars['Boolean']['output'];
  jwtToken: Scalars['String']['output'];
  mobilePhone?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  optInEmail?: Maybe<Scalars['Boolean']['output']>;
  optInSms?: Maybe<Scalars['Boolean']['output']>;
  origin?: Maybe<Scalars['String']['output']>;
  paidOrdersCount: Scalars['Int']['output'];
  referrerId?: Maybe<Scalars['ID']['output']>;
  showWelcomeScreen: Scalars['Boolean']['output'];
  signedUp: Scalars['Boolean']['output'];
};

export type DietaryPreference = {
  __typename?: 'DietaryPreference';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type Error = {
  __typename?: 'Error';
  /** Error code for client-side handling */
  code?: Maybe<Scalars['String']['output']>;
  /** Error message */
  message: Scalars['String']['output'];
  /** Path to the input field that caused the error */
  path?: Maybe<Array<Scalars['String']['output']>>;
};

export type Faq = {
  __typename?: 'Faq';
  answer: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  question: Scalars['String']['output'];
};

export type FreightDeliverySize = {
  __typename?: 'FreightDeliverySize';
  id: Scalars['ID']['output'];
  maximumCount: Scalars['Int']['output'];
  minimumCount: Scalars['Int']['output'];
  parcelType: Scalars['String']['output'];
  price: Scalars['Float']['output'];
};

export enum GetCodeActionEnum {
  /** Resend code */
  ResendCode = 'RESEND_CODE',
  /** Resend email code */
  ResendEmailCode = 'RESEND_EMAIL_CODE',
  /** Resend SMS code */
  ResendSmsCode = 'RESEND_SMS_CODE',
  /** Sign in */
  SignIn = 'SIGN_IN',
  /** Sign up */
  SignUp = 'SIGN_UP'
}

/** Autogenerated input type of GetCode */
export type GetCodeInput = {
  attributes: GetCodeMobileSms;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Attributes for creating a customer, when logging in from mobile app via sms code */
export type GetCodeMobileSms = {
  deviceOs: DeviceOsEnumFilter;
  fcmDeviceToken: Scalars['String']['input'];
  /** Mobile phone number of the customer */
  mobilePhone: Scalars['String']['input'];
  /** Referrer token */
  referrerToken?: InputMaybe<Scalars['String']['input']>;
};

/** Attributes for requesting auth code as a customer from the web browser */
export type GetCodeWeb = {
  /** Action to be performed */
  action: GetCodeActionEnum;
  browserFingerprint: Scalars['String']['input'];
  /** Email of the customer */
  email?: InputMaybe<Scalars['String']['input']>;
  /** Mobile phone number of the customer */
  mobilePhone?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  /** Referrer token */
  referrerToken?: InputMaybe<Scalars['String']['input']>;
};

/** Attributes for requesting auth code as a customer from the bulk order */
export type GetCodeWebBulkOrder = {
  /** Action to be performed */
  action: GetCodeActionEnum;
  browserFingerprint: Scalars['String']['input'];
  /** Email of the customer */
  email?: InputMaybe<Scalars['String']['input']>;
  /** Mobile phone number of the customer */
  mobilePhone?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  /** Whether the customer opts in to receive email */
  optInEmail?: InputMaybe<Scalars['Boolean']['input']>;
  /** Whether the customer opts in to receive SMS */
  optInSms?: InputMaybe<Scalars['Boolean']['input']>;
  /** Referral Token */
  referralToken?: InputMaybe<Scalars['String']['input']>;
  /** Referrer token */
  referrerToken?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of GetCodeWebBulkOrder */
export type GetCodeWebBulkOrderInput = {
  attributes: GetCodeWebBulkOrder;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Attributes for requesting auth code as a customer from the bulk order */
export type GetCodeWebForAccount = {
  /** phone or email */
  action?: InputMaybe<Scalars['String']['input']>;
  browserFingerprint: Scalars['String']['input'];
  /** Customer email */
  email?: InputMaybe<Scalars['String']['input']>;
  /** Whether the customer opts in to receive email */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Customer Mobile Phone */
  mobilePhone?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  /** Referrer token */
  referrerToken?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of GetCodeWebForAccount */
export type GetCodeWebForAccountInput = {
  attributes: GetCodeWebForAccount;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of GetCodeWebForAccount */
export type GetCodeWebForAccountPayload = {
  __typename?: 'GetCodeWebForAccountPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  optInEmail: Scalars['Boolean']['output'];
  optInSms: Scalars['Boolean']['output'];
};

/** Autogenerated input type of GetCodeWeb */
export type GetCodeWebInput = {
  attributes: GetCodeWeb;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

export type GetReferralLink = {
  __typename?: 'GetReferralLink';
  referralLink?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of GiveFeedback */
export type GiveFeedbackInput = {
  attributes: ItemFeedbackAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Attributes for creating or updating a Storefront Guest Customer */
export type GuestCustomerAttributes = {
  /** Guest Customer email */
  email: Scalars['String']['input'];
  /** logged in Customer ID */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Guest Customer mobile phone */
  mobilePhone: Scalars['String']['input'];
  /** Guest Customer name */
  name: Scalars['String']['input'];
  sourceId?: InputMaybe<Scalars['ID']['input']>;
  sourceType?: InputMaybe<Scalars['String']['input']>;
};

export type HelpTopic = {
  __typename?: 'HelpTopic';
  id: Scalars['ID']['output'];
  position: Scalars['Int']['output'];
  title: Scalars['String']['output'];
};

export type Highlights = {
  __typename?: 'Highlights';
  facebookUrl?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  imageUrl?: Maybe<Scalars['String']['output']>;
  instagramUrl?: Maybe<Scalars['String']['output']>;
  tiktokUrl?: Maybe<Scalars['String']['output']>;
  twitterUrl?: Maybe<Scalars['String']['output']>;
  videoUrl?: Maybe<Scalars['String']['output']>;
};

export type Hotspot = {
  __typename?: 'Hotspot';
  address: Scalars['String']['output'];
  deliveryInstruction?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
  name: Scalars['String']['output'];
  pickupInstruction?: Maybe<Scalars['String']['output']>;
};

export type HotspotTime = {
  __typename?: 'HotspotTime';
  accounts: Array<Account>;
  cutOff: Scalars['String']['output'];
  cutOffSameDay: Scalars['Boolean']['output'];
  endInterval: Scalars['ISO8601DateTime']['output'];
  id: Scalars['ID']['output'];
  locations: LocationConnection;
  locationsCount: Scalars['Int']['output'];
  menuCategory: MenuCategory;
  midnightShift: Scalars['Boolean']['output'];
  minOrderPurchase?: Maybe<Scalars['Float']['output']>;
  startInterval: Scalars['ISO8601DateTime']['output'];
};


export type HotspotTimeLocationsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

export type HotspotTimesWeekDays = {
  __typename?: 'HotspotTimesWeekDays';
  date: Scalars['ISO8601Date']['output'];
  hotspotTimes?: Maybe<Array<HotspotTime>>;
  soldOutHotspotTimeIds: Array<Scalars['ID']['output']>;
  weekDayName: Scalars['String']['output'];
};

export type HotspotWithWeekDays = {
  __typename?: 'HotspotWithWeekDays';
  days?: Maybe<Array<HotspotTimesWeekDays>>;
  hotspot: Hotspot;
};

export enum ImageVariant {
  /** [100, 100] */
  Width100 = 'WIDTH100',
  /** [300, 300] */
  Width300 = 'WIDTH300',
  /** [600, 600] */
  Width600 = 'WIDTH600',
  /** [800, 800] */
  Width800 = 'WIDTH800'
}

export type Ingredient = {
  __typename?: 'Ingredient';
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

/** Attributes for creating review for order item */
export type ItemFeedbackAttributes = {
  additionalFeedback?: InputMaybe<Scalars['String']['input']>;
  amountOfFoodRating: Scalars['Int']['input'];
  body?: InputMaybe<Scalars['String']['input']>;
  ingredientsRating: Scalars['Int']['input'];
  orderItemId: Scalars['ID']['input'];
  rating?: InputMaybe<Scalars['Int']['input']>;
  sauceRating: Scalars['Int']['input'];
  spiceRating: Scalars['Int']['input'];
  tasteRating: Scalars['Int']['input'];
};

/** Attributes for finding neearest hotspot for delivery */
export type LocateNearestHotspotAttributes = {
  /** Delivery Address */
  address: Scalars['String']['input'];
  /** Delivery Address latitude */
  latitude: Scalars['Float']['input'];
  /** Delivery Address longitude */
  longitude: Scalars['Float']['input'];
  /** Delivery Address zip */
  zip: Scalars['String']['input'];
};

/** Autogenerated input type of LocateNearestHotspot */
export type LocateNearestHotspotInput = {
  attributes: LocateNearestHotspotAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

export type Location = {
  __typename?: 'Location';
  account: Account;
  address: Scalars['String']['output'];
  city: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
  menus?: Maybe<MenuConnection>;
  name: Scalars['String']['output'];
  radius?: Maybe<Scalars['Float']['output']>;
};


export type LocationMenusArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

/** The connection type for Location. */
export type LocationConnection = {
  __typename?: 'LocationConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<LocationEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<Location>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type LocationEdge = {
  __typename?: 'LocationEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Location>;
};

export type Menu = {
  __typename?: 'Menu';
  id: Scalars['ID']['output'];
  menuCategory: MenuCategory;
  menuSections: MenuSectionConnection;
  name: Scalars['String']['output'];
};


export type MenuMenuSectionsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

export type MenuCategory = {
  __typename?: 'MenuCategory';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

/** The connection type for Menu. */
export type MenuConnection = {
  __typename?: 'MenuConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MenuEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<Menu>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type MenuEdge = {
  __typename?: 'MenuEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Menu>;
};

export type MenuItem = {
  __typename?: 'MenuItem';
  availability: Scalars['Boolean']['output'];
  basePrice?: Maybe<Scalars['Float']['output']>;
  bestSeller: Scalars['Boolean']['output'];
  combinable: Scalars['Boolean']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  imageUrl?: Maybe<Scalars['String']['output']>;
  labels?: Maybe<Array<MenuItemLabel>>;
  maxItemLimitReached: Scalars['Boolean']['output'];
  menuItemSkuId: Scalars['ID']['output'];
  modifierGroups?: Maybe<ModifierGroupConnection>;
  name: Scalars['String']['output'];
  orderedCount: Scalars['Int']['output'];
  price?: Maybe<Scalars['Float']['output']>;
  promoSample?: Maybe<PromoCampaign>;
  rating?: Maybe<Scalars['Float']['output']>;
  reviews: ReviewConnection;
  reviewsCount: Scalars['Int']['output'];
  reviewsRating?: Maybe<Scalars['Float']['output']>;
  sizes?: Maybe<MenuItemSizeConnection>;
  speciality: Scalars['Boolean']['output'];
  surplusCount: Scalars['Int']['output'];
  surplusTotalCount: Scalars['Int']['output'];
  tax: Scalars['Float']['output'];
};


export type MenuItemImageUrlArgs = {
  variant?: InputMaybe<ImageVariant>;
};


export type MenuItemModifierGroupsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type MenuItemReviewsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type MenuItemSizesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

/** The connection type for MenuItem. */
export type MenuItemConnection = {
  __typename?: 'MenuItemConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MenuItemEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<MenuItem>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type MenuItemEdge = {
  __typename?: 'MenuItemEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MenuItem>;
};

export type MenuItemFilters = {
  __typename?: 'MenuItemFilters';
  /** Fetch all cuisine options */
  cuisines: Array<Cuisine>;
  /** Fetch all dietary options */
  dietaryPreferences: Array<DietaryPreference>;
};

export type MenuItemLabel = {
  __typename?: 'MenuItemLabel';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  position: Scalars['Int']['output'];
};

export type MenuItemSize = {
  __typename?: 'MenuItemSize';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  price: Scalars['Float']['output'];
};

/** The connection type for MenuItemSize. */
export type MenuItemSizeConnection = {
  __typename?: 'MenuItemSizeConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MenuItemSizeEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<MenuItemSize>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type MenuItemSizeEdge = {
  __typename?: 'MenuItemSizeEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MenuItemSize>;
};

export type MenuSection = {
  __typename?: 'MenuSection';
  active: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  menuItems: MenuItemConnection;
  name: Scalars['String']['output'];
};


export type MenuSectionMenuItemsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

/** The connection type for MenuSection. */
export type MenuSectionConnection = {
  __typename?: 'MenuSectionConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<MenuSectionEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<MenuSection>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type MenuSectionEdge = {
  __typename?: 'MenuSectionEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<MenuSection>;
};

export type MobileConfig = {
  __typename?: 'MobileConfig';
  hotspotDefaultAddress: Scalars['String']['output'];
  menuSectionsSortOrder: Array<Scalars['String']['output']>;
  notificationsRequestTimeoutInMins: Scalars['Int']['output'];
  translations?: Maybe<Scalars['String']['output']>;
};

export type ModifierGroup = {
  __typename?: 'ModifierGroup';
  id: Scalars['ID']['output'];
  internalName: Scalars['String']['output'];
  mandatory: Scalars['Boolean']['output'];
  maxSelection: Scalars['Int']['output'];
  modifierItems?: Maybe<ModifierItemConnection>;
};


export type ModifierGroupModifierItemsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

/** The connection type for ModifierGroup. */
export type ModifierGroupConnection = {
  __typename?: 'ModifierGroupConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ModifierGroupEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<ModifierGroup>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type ModifierGroupEdge = {
  __typename?: 'ModifierGroupEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<ModifierGroup>;
};

export type ModifierItem = {
  __typename?: 'ModifierItem';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  price: Scalars['Float']['output'];
};

/** The connection type for ModifierItem. */
export type ModifierItemConnection = {
  __typename?: 'ModifierItemConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ModifierItemEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<ModifierItem>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type ModifierItemEdge = {
  __typename?: 'ModifierItemEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<ModifierItem>;
};

export type Mutation = {
  __typename?: 'Mutation';
  /** Login for customers via website for admins only (mode: email/password) */
  adminLogin?: Maybe<AdminLoginPayload>;
  cancelOrder?: Maybe<Order>;
  cancelParcelDeliveryOrder?: Maybe<ParcelDeliveryOrder>;
  createBlueCollarSupportRequest?: Maybe<SupportRequestResult>;
  createBurqOrder?: Maybe<StorefrontBurqUpOrderDelivery>;
  createCareerRequest?: Maybe<CreateCareerRequestPayload>;
  createCohort?: Maybe<CreateCohortPayload>;
  createCohortScheduler?: Maybe<CreateCohortSchedulerPayload>;
  createGeneralInquery?: Maybe<CreateGeneralInqueryPayload>;
  createNewMenuItemRequest?: Maybe<CreateNewMenuItemRequestPayload>;
  createOrder?: Maybe<Order>;
  createParcelDeliveryOrder?: Maybe<ParcelDeliveryOrder>;
  createParcelDeliveryStripePaymentParams?: Maybe<CreateParcelDeliveryStripePaymentParamsPayload>;
  createPilotProgramInfo?: Maybe<CreatePilotProgramInfoPayload>;
  createStorefrontDeliveryOrder?: Maybe<DeliveryOrder>;
  createStorefrontMarketingDetail?: Maybe<CreateMarketingDetailPayload>;
  createStorefrontPickupOrder?: Maybe<PickupOrder>;
  createStorefrontStripePaymentParams?: Maybe<CreateStorefrontStripePaymentParamsPayload>;
  createStorefrontSupportRequest?: Maybe<CreateStorefrontSupportRequestPayload>;
  createStripePaymentParams?: Maybe<PaymentParams>;
  deductCredits?: Maybe<DeductUserCredits>;
  delete?: Maybe<Customer>;
  deleteCohort?: Maybe<DeleteCohortPayload>;
  deleteCohortScheduler?: Maybe<DeleteCohortSchedulerPayload>;
  getCode?: Maybe<CustomerVerificationCode>;
  getCodeWeb?: Maybe<CustomerVerificationCode>;
  getCodeWebBulkOrder?: Maybe<CustomerVerificationBulkOrderCode>;
  getCodeWebForAccount?: Maybe<GetCodeWebForAccountPayload>;
  giveFeedback?: Maybe<OrderItem>;
  locateNearestHotspot?: Maybe<StorefrontLocateNearestHotspot>;
  notifyCohortCustomers?: Maybe<NotifyCohortCustomersPayload>;
  payAdjustedParcelDeliveryOrder?: Maybe<PayAdjustedParcelDeliveryOrderPayload>;
  payOrder?: Maybe<PayOrder>;
  pickupNow?: Maybe<Order>;
  setAddressWeb?: Maybe<SetAddressWebPayload>;
  /** Login for customers - Customer must already exist via GetCode */
  signIn?: Maybe<DeviceToken>;
  /** Guest mobile login for customers - Will create a customer record as guest. If the supplied device token is associated with a customer, authentication will be rejected. */
  signInAsGuestMobile?: Maybe<DeviceToken>;
  /** Login for customers via website */
  signInWeb?: Maybe<DeviceTokenTypeWeb>;
  /** Sign out for customers */
  signOut?: Maybe<Scalars['Boolean']['output']>;
  /** Sign up Web process for customers, including OTP verification */
  signUpWeb?: Maybe<SignUpWebResult>;
  socialSignInWeb?: Maybe<SocialSignInWebResult>;
  /** Web Sign-In Process for Storefront Customers */
  storefrontSignInWeb?: Maybe<DeviceTokenTypeWeb>;
  /** Sign up Web process for Storefront Customer */
  storefrontSignUpWeb?: Maybe<SignUpWebResult>;
  updateCohort?: Maybe<UpdateCohortPayload>;
  updateCohortScheduler?: Maybe<UpdateCohortSchedulerPayload>;
  updateCustomer?: Maybe<Customer>;
  updateCustomerDeviceToken?: Maybe<DeviceToken>;
  updateFollowsSocialMedia?: Maybe<Customer>;
  updateParcelDeliveryOrder?: Maybe<ParcelDeliveryOrder>;
  updateStorefrontDeliveryOrder?: Maybe<DeliveryOrder>;
  updateStorefrontPickupOrder?: Maybe<PickupOrder>;
  upsertBlueCollarProspect?: Maybe<UpsertProspectPayload>;
  upsertParcelDeliveryOrderReview?: Maybe<ParcelDeliveryOrderReview>;
  validateParcelDeliveryOrder?: Maybe<ValidateParcelDeliveryOrder>;
  verifyCode?: Maybe<VerifyCodePayload>;
};


export type MutationAdminLoginArgs = {
  input: AdminLoginInput;
};


export type MutationCancelOrderArgs = {
  input: CancelInput;
};


export type MutationCancelParcelDeliveryOrderArgs = {
  input: CancelParcelDeliveryOrderInput;
};


export type MutationCreateBlueCollarSupportRequestArgs = {
  input: CreateBlueCollarSupportRequestInput;
};


export type MutationCreateBurqOrderArgs = {
  input: CreateBurqOrderInput;
};


export type MutationCreateCareerRequestArgs = {
  input: CreateCareerRequestInput;
};


export type MutationCreateCohortArgs = {
  input: CreateCohortInput;
};


export type MutationCreateCohortSchedulerArgs = {
  input: CreateCohortSchedulerInput;
};


export type MutationCreateGeneralInqueryArgs = {
  input: CreateGeneralInqueryInput;
};


export type MutationCreateNewMenuItemRequestArgs = {
  input: CreateNewMenuItemRequestInput;
};


export type MutationCreateOrderArgs = {
  input: CreateOrderInput;
};


export type MutationCreateParcelDeliveryOrderArgs = {
  input: CreateParcelDeliveryOrderInput;
};


export type MutationCreateParcelDeliveryStripePaymentParamsArgs = {
  input: CreateParcelDeliveryStripePaymentParamsInput;
};


export type MutationCreatePilotProgramInfoArgs = {
  input: CreatePilotProgramInfoInput;
};


export type MutationCreateStorefrontDeliveryOrderArgs = {
  input: CreateStorefrontDeliveryOrderInput;
};


export type MutationCreateStorefrontMarketingDetailArgs = {
  input: CreateMarketingDetailInput;
};


export type MutationCreateStorefrontPickupOrderArgs = {
  input: CreateStorefrontPickupOrderInput;
};


export type MutationCreateStorefrontStripePaymentParamsArgs = {
  input: CreateStorefrontStripePaymentParamsInput;
};


export type MutationCreateStorefrontSupportRequestArgs = {
  input: CreateStorefrontSupportRequestInput;
};


export type MutationCreateStripePaymentParamsArgs = {
  input: CreateStripePaymentParamsInput;
};


export type MutationDeductCreditsArgs = {
  orderId: Scalars['ID']['input'];
};


export type MutationDeleteArgs = {
  input: DeleteInput;
};


export type MutationDeleteCohortArgs = {
  input: DeleteCohortInput;
};


export type MutationDeleteCohortSchedulerArgs = {
  input: DeleteCohortSchedulerInput;
};


export type MutationGetCodeArgs = {
  input: GetCodeInput;
};


export type MutationGetCodeWebArgs = {
  input: GetCodeWebInput;
};


export type MutationGetCodeWebBulkOrderArgs = {
  input: GetCodeWebBulkOrderInput;
};


export type MutationGetCodeWebForAccountArgs = {
  input: GetCodeWebForAccountInput;
};


export type MutationGiveFeedbackArgs = {
  input: GiveFeedbackInput;
};


export type MutationLocateNearestHotspotArgs = {
  input: LocateNearestHotspotInput;
};


export type MutationNotifyCohortCustomersArgs = {
  input: NotifyCohortCustomersInput;
};


export type MutationPayAdjustedParcelDeliveryOrderArgs = {
  input: PayAdjustedParcelDeliveryOrderInput;
};


export type MutationPayOrderArgs = {
  input: PayOrderInput;
};


export type MutationPickupNowArgs = {
  input: PickupNowInput;
};


export type MutationSetAddressWebArgs = {
  input: SetAddressWebInput;
};


export type MutationSignInArgs = {
  input: SignInMobileSmsInput;
};


export type MutationSignInAsGuestMobileArgs = {
  input: SignInMobileGuestInput;
};


export type MutationSignInWebArgs = {
  input: SignInWebInput;
};


export type MutationSignOutArgs = {
  input: SignOutInput;
};


export type MutationSignUpWebArgs = {
  input: SignUpWebInput;
};


export type MutationSocialSignInWebArgs = {
  input: SocialSignInWebInput;
};


export type MutationStorefrontSignInWebArgs = {
  input: StorefrontSignInWebInput;
};


export type MutationStorefrontSignUpWebArgs = {
  input: StorefrontSignUpWebInput;
};


export type MutationUpdateCohortArgs = {
  input: UpdateCohortInput;
};


export type MutationUpdateCohortSchedulerArgs = {
  input: UpdateCohortSchedulerInput;
};


export type MutationUpdateCustomerArgs = {
  input: UpdateInput;
};


export type MutationUpdateCustomerDeviceTokenArgs = {
  input: UpdateDeviceTokenInput;
};


export type MutationUpdateFollowsSocialMediaArgs = {
  input: UpdateFollowsSocialMediaInput;
};


export type MutationUpdateParcelDeliveryOrderArgs = {
  input: UpdateParcelDeliveryOrderInput;
};


export type MutationUpdateStorefrontDeliveryOrderArgs = {
  input: UpdateStorefrontDeliveryOrderInput;
};


export type MutationUpdateStorefrontPickupOrderArgs = {
  input: UpdateStorefrontPickupOrderInput;
};


export type MutationUpsertBlueCollarProspectArgs = {
  input: UpsertProspectInput;
};


export type MutationUpsertParcelDeliveryOrderReviewArgs = {
  input: UpsertParcelDeliveryOrderReviewInput;
};


export type MutationValidateParcelDeliveryOrderArgs = {
  input: ValidateParcelDeliveryOrderInput;
};


export type MutationVerifyCodeArgs = {
  input: VerifyCodeInput;
};

export type NewMenuItemRequest = {
  __typename?: 'NewMenuItemRequest';
  id: Scalars['ID']['output'];
  imageUrl?: Maybe<Scalars['String']['output']>;
  itemName: Scalars['String']['output'];
};


export type NewMenuItemRequestImageUrlArgs = {
  variant?: InputMaybe<ImageVariant>;
};

/** Autogenerated input type of NotifyCohortCustomers */
export type NotifyCohortCustomersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  cohortId: Scalars['ID']['input'];
  message: Scalars['String']['input'];
};

/** Autogenerated return type of NotifyCohortCustomers */
export type NotifyCohortCustomersPayload = {
  __typename?: 'NotifyCohortCustomersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export type Order = {
  __typename?: 'Order';
  address: Scalars['String']['output'];
  credits: Scalars['Float']['output'];
  deliveryFrom?: Maybe<Scalars['ISO8601DateTime']['output']>;
  deliveryTo?: Maybe<Scalars['ISO8601DateTime']['output']>;
  hotspot: Hotspot;
  hotspotTime: HotspotTime;
  id: Scalars['ID']['output'];
  isDelivery: Scalars['Boolean']['output'];
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
  menuCategory: MenuCategory;
  orderDate?: Maybe<Scalars['ISO8601Date']['output']>;
  orderItems: Array<OrderItem>;
  ordinalNumber?: Maybe<Scalars['Int']['output']>;
  payAmount: Scalars['Float']['output'];
  promoCampaign?: Maybe<PromoCampaign>;
  status: Scalars['String']['output'];
  statusHistory?: Maybe<Array<StatusHistory>>;
  subTotal: Scalars['Float']['output'];
  tips: Scalars['Float']['output'];
  total: Scalars['Float']['output'];
  totalTax: Scalars['Float']['output'];
  uid: Scalars['String']['output'];
};

/** Attributes for creating order */
export type OrderAttributes = {
  /** Delivery address */
  address: Scalars['String']['input'];
  /** Order date */
  date: Scalars['ISO8601Date']['input'];
  /** Delivery time start interval, e.g. 4:00PM */
  deliveryFrom?: InputMaybe<Scalars['String']['input']>;
  /** Delivery time end interval, e.g. 4:30PM */
  deliveryTo?: InputMaybe<Scalars['String']['input']>;
  /** Hotspot id */
  hotspotId: Scalars['ID']['input'];
  /** Hotspot Time id */
  hotspotTimeId: Scalars['ID']['input'];
  /** Is delivery */
  isDelivery: Scalars['Boolean']['input'];
  latitude: Scalars['Float']['input'];
  longitude: Scalars['Float']['input'];
  /** Menu category id */
  menuCategoryId: Scalars['ID']['input'];
  /** On-demand order marker */
  onDemand?: InputMaybe<Scalars['Boolean']['input']>;
  /** Order items */
  orderItems: Array<OrderItemAttributes>;
  /** Tips type */
  tipsType: TipsEnum;
};

/** The connection type for Order. */
export type OrderConnection = {
  __typename?: 'OrderConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<OrderEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<Order>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type OrderEdge = {
  __typename?: 'OrderEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Order>;
};

export type OrderItem = {
  __typename?: 'OrderItem';
  account: Account;
  count: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  location: Location;
  menuItem: MenuItem;
  price: Scalars['Float']['output'];
  promoSample: Scalars['Boolean']['output'];
  reviewed: Scalars['Boolean']['output'];
  tax: Scalars['Float']['output'];
};

/** Attributes for creating or updating a customer */
export type OrderItemAttributes = {
  /** Count */
  count: Scalars['Int']['input'];
  /** Discount flag */
  discount?: InputMaybe<Scalars['Boolean']['input']>;
  /** Menu item id */
  menuItemId: Scalars['ID']['input'];
};

/** Order types */
export enum OrderTypeEnum {
  /** Delivery order */
  Delivery = 'DELIVERY',
  /** Pickup store */
  Pickup = 'PICKUP'
}

export enum OrdersEnumFilter {
  /** Past orders */
  Past = 'PAST',
  /** Upcoming orders */
  Upcoming = 'UPCOMING'
}

export type OtpResponse = {
  __typename?: 'OtpResponse';
  message: Scalars['String']['output'];
  otp?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Information about pagination in a connection. */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['String']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['String']['output']>;
};

export type ParcelDeliveryOrder = {
  __typename?: 'ParcelDeliveryOrder';
  adjustedCredits: Scalars['Float']['output'];
  cancelledAt?: Maybe<Scalars['ISO8601Date']['output']>;
  credits: Scalars['Float']['output'];
  customerParcelDeliveryOrderReview?: Maybe<ParcelDeliveryOrderReview>;
  deliveryAddress: Scalars['String']['output'];
  freightDeliverySize?: Maybe<FreightDeliverySize>;
  id: Scalars['ID']['output'];
  isRainCheckOrder: Scalars['Boolean']['output'];
  lowIncomeDiscount?: Maybe<Scalars['Float']['output']>;
  orderDate?: Maybe<Scalars['ISO8601Date']['output']>;
  ordinalNumber?: Maybe<Scalars['Int']['output']>;
  parcelDeliveryOrderItems: Array<ParcelDeliveryOrderItem>;
  parcelDeliveryOrderReviews?: Maybe<ParcelDeliveryOrderReview>;
  previouslyAdjustedCredits: Scalars['Float']['output'];
  rainCheckDiscount?: Maybe<Scalars['Float']['output']>;
  recipientsName: Scalars['String']['output'];
  refundedAt?: Maybe<Scalars['ISO8601Date']['output']>;
  /** Shipping Charges */
  shippingCharges: Scalars['Float']['output'];
  status: Scalars['String']['output'];
  subTotal: Scalars['Float']['output'];
  taxAmount: Scalars['Float']['output'];
  tip: Scalars['Float']['output'];
  total: Scalars['Float']['output'];
  trackingNumber?: Maybe<Scalars['String']['output']>;
  zipTaxApplied?: Maybe<Scalars['Boolean']['output']>;
};

/** Attributes for creating or updating a parcel delivery order */
export type ParcelDeliveryOrderAttributes = {
  /** Credits used for the order */
  credits?: InputMaybe<Scalars['Float']['input']>;
  /** Delivery Address */
  deliveryAddress: Scalars['String']['input'];
  /** Freight Delivery Size Id */
  freightDeliverySizeId: Scalars['ID']['input'];
  /** Parcel Delivery Order ID (only for update) */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Low Income Discount Amount */
  lowIncomeDiscount?: InputMaybe<Scalars['Float']['input']>;
  /** Parcel Delivery Order items */
  parcelDeliveryOrderItems: Array<ParcelDeliveryOrderItemAttributes>;
  /** Credits used for the order */
  previouslyAdjustedCredits?: InputMaybe<Scalars['Float']['input']>;
  /** Rain check Discount Amount */
  rainCheckDiscount?: InputMaybe<Scalars['Float']['input']>;
  /** Recipients Name */
  recipientsName: Scalars['String']['input'];
  /** Shipping Charges */
  shippingCharges: Scalars['Float']['input'];
  /** SubTotal */
  subtotal: Scalars['Float']['input'];
  /** Tax Amount */
  taxAmount: Scalars['Float']['input'];
  /** Tip for the order */
  tip?: InputMaybe<Scalars['Float']['input']>;
  /** Total Amount */
  total: Scalars['Float']['input'];
  /** Warehouse Id */
  warehouseId: Scalars['ID']['input'];
  /** Zip Tax Applied */
  zipTaxApplied: Scalars['Boolean']['input'];
};

/** The connection type for ParcelDeliveryOrder. */
export type ParcelDeliveryOrderConnection = {
  __typename?: 'ParcelDeliveryOrderConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ParcelDeliveryOrderEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<ParcelDeliveryOrder>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type ParcelDeliveryOrderEdge = {
  __typename?: 'ParcelDeliveryOrderEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<ParcelDeliveryOrder>;
};

export type ParcelDeliveryOrderItem = {
  __typename?: 'ParcelDeliveryOrderItem';
  bulkMenuItem: BulkMenuItem;
  id: Scalars['ID']['output'];
  price: Scalars['Float']['output'];
  pricePerMeal?: Maybe<Scalars['Float']['output']>;
  quantity: Scalars['Int']['output'];
};

/** Attributes for creating parcel delivery order item */
export type ParcelDeliveryOrderItemAttributes = {
  /** Bulk Menu item id */
  bulkMenuItemId: Scalars['ID']['input'];
  /** Quantity */
  quantity: Scalars['Int']['input'];
};

export type ParcelDeliveryOrderReview = {
  __typename?: 'ParcelDeliveryOrderReview';
  body?: Maybe<Scalars['String']['output']>;
  customer: Customer;
  id: Scalars['ID']['output'];
  parcelDeliveryOrder: ParcelDeliveryOrder;
  rating: Scalars['Float']['output'];
};

/** Attributes for creating/updating parcel delivery order review */
export type ParcelDeliveryOrderReviewAttributes = {
  body?: InputMaybe<Scalars['String']['input']>;
  parcelDeliveryOrderId: Scalars['ID']['input'];
  rating: Scalars['Float']['input'];
};

/** Autogenerated input type of PayAdjustedParcelDeliveryOrder */
export type PayAdjustedParcelDeliveryOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  parcelDeliverOrderId: Scalars['ID']['input'];
};

/** Autogenerated return type of PayAdjustedParcelDeliveryOrder */
export type PayAdjustedParcelDeliveryOrderPayload = {
  __typename?: 'PayAdjustedParcelDeliveryOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  error?: Maybe<Array<Scalars['String']['output']>>;
  success: Scalars['Boolean']['output'];
};

export type PayOrder = {
  __typename?: 'PayOrder';
  orderStatus: Scalars['String']['output'];
};

/** Autogenerated input type of PayOrder */
export type PayOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderId: Scalars['ID']['input'];
};

export type PaymentParams = {
  __typename?: 'PaymentParams';
  customer: Scalars['String']['output'];
  ephemeralKey: Scalars['String']['output'];
  paymentIntent: Scalars['String']['output'];
};

export type PendingReview = {
  __typename?: 'PendingReview';
  id: Scalars['ID']['output'];
  menuItemName: Scalars['String']['output'];
  showSkip: Scalars['Boolean']['output'];
};

/** Autogenerated input type of PickupNow */
export type PickupNowInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  isCustomerOnTheWay: Scalars['Boolean']['input'];
  orderId: Scalars['ID']['input'];
};

export type PickupOrder = {
  __typename?: 'PickupOrder';
  cancelledAt?: Maybe<Scalars['ISO8601Date']['output']>;
  id: Scalars['ID']['output'];
  orderDate?: Maybe<Scalars['ISO8601Date']['output']>;
  pickupAddress: Scalars['String']['output'];
  sourceId: Scalars['ID']['output'];
  sourceType: Scalars['String']['output'];
  status: Scalars['String']['output'];
  storefrontPickupOrderItems: Array<StorefrontOrderItem>;
  subTotal: Scalars['Float']['output'];
  taxAmount?: Maybe<Scalars['Float']['output']>;
  total?: Maybe<Scalars['Float']['output']>;
};

/** Attributes for creating storefront pickup order */
export type PickupOrderAttributes = {
  /** Credits Amount */
  credits?: InputMaybe<Scalars['Float']['input']>;
  /** Donations Amount */
  donationAmount?: InputMaybe<Scalars['Float']['input']>;
  /** Guest Customer Info */
  guestCustomerDetails: GuestCustomerAttributes;
  /** Hotspot Time id */
  hotspotTimeId: Scalars['ID']['input'];
  /** Storefront Order ID (only for update) */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Order date */
  orderDate: Scalars['String']['input'];
  /** Pickup address */
  pickupAddress: Scalars['String']['input'];
  pickupTime: Scalars['String']['input'];
  /** Storefront Order items */
  storefrontOrderItems: Array<StorefrontOrderItemAttributes>;
  /** Tax Amount */
  taxAmount: Scalars['Float']['input'];
  /** Tips Amount */
  tips: Scalars['Float']['input'];
};

export type PromoCampaign = {
  __typename?: 'PromoCampaign';
  amount: Scalars['Float']['output'];
  discountType: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type ProspectDiscounts = {
  __typename?: 'ProspectDiscounts';
  discountPercentage: Scalars['Float']['output'];
  lowIncomeThreshold: Scalars['Int']['output'];
};

export type Query = {
  __typename?: 'Query';
  /** Fetch all active hotspots */
  activeHotspots: Array<Hotspot>;
  /** Returns blue collar checkout config */
  blueCollarCheckoutConfig: BlueCollarCheckoutConfig;
  /** Fetches the Blue Collar FAQs */
  blueCollarFaqs: Array<Faq>;
  /** Build the referral link and return it */
  blueCollarGetReferralLink?: Maybe<GetReferralLink>;
  /** Fetch the Custom Prospect Discount */
  blueCollarProspectDiscounts: ProspectDiscounts;
  /** Fetches the Blue Collar Testimony Details */
  blueCollarTestimonyDetails?: Maybe<Array<TestimonyDetail>>;
  /** Returns a bulk menu item by id */
  bulkMenuItem: BulkMenuItem;
  /** Returns the default bulk order storefront with sections and items */
  bulkOrderMenu: BulkOrderMenu;
  /** Returns a specific bulk order section with filtered items */
  bulkOrderSection: BulkOrderSection;
  /** Returns all the customers associated to a cohort */
  cohortCustomers: BulkCohortItemsResponse;
  /** Returns list of cohorts */
  cohorts: Array<Cohort>;
  /** Returns a current user by token */
  currentCustomer: Customer;
  customerHotspot: HotspotWithWeekDays;
  /** Returns storefront default hotspot menu items */
  defaultStorefrontHotspotMenuItems: Array<DefaultStorefrontHotspotMenuItem>;
  /** Retrieves the customers OTP based on the provided email */
  getCustomerOtp?: Maybe<OtpResponse>;
  /** Returns a list of help topics */
  helpTopics?: Maybe<Array<HelpTopic>>;
  hotspotTime: HotspotTime;
  /** Returns a list of menu categories with cut off settings */
  menuCategories: Array<MenuCategory>;
  /** Returns a menu item by id */
  menuItems: MenuItem;
  mobileConfig: MobileConfig;
  order: Order;
  /** Fetch all order statuses */
  orderStatus: Array<Scalars['String']['output']>;
  orders: OrderConnection;
  /** Fetch a parcel delivery order associated with a specific customer */
  parcelDeliveryOrder: ParcelDeliveryOrder;
  /** Fetches a list of all parcel delivery orders associated with a specific customer */
  parcelDeliveryOrders: ParcelDeliveryOrderConnection;
  /** Returns pending reviews for a specific order or all pending reviews */
  pendingReviews: Array<PendingReview>;
  /** Returns a system settings */
  settings: Settings;
  /** Returns storefront active hotspots with hotspot times days */
  storefrontActiveHotspots?: Maybe<Array<StorefrontHotspot>>;
  /** Returns storefront checkout config info */
  storefrontCheckoutConfig: StorefrontCheckoutConfig;
  /** Returns the storefront faqs */
  storefrontFaqs: Array<StorefrontFaq>;
  /** Returns storefront hotspot based on ID and current time */
  storefrontHotspot: StorefrontHotspot;
  /** Returns stripe configuration keys */
  stripeConfig: Config;
  /** Returns a system values for tips */
  tips: Tips;
  /** Returns a list of universities */
  universities: Array<University>;
};


export type QueryBulkMenuItemArgs = {
  id: Scalars['ID']['input'];
};


export type QueryBulkOrderSectionArgs = {
  id: Scalars['ID']['input'];
};


export type QueryCohortCustomersArgs = {
  cohortId: Scalars['ID']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryCustomerHotspotArgs = {
  latitude: Scalars['Float']['input'];
  longitude: Scalars['Float']['input'];
};


export type QueryGetCustomerOtpArgs = {
  email: Scalars['String']['input'];
};


export type QueryHotspotTimeArgs = {
  id: Scalars['ID']['input'];
  orderDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
};


export type QueryMenuItemsArgs = {
  hotspotTimeId?: InputMaybe<Scalars['ID']['input']>;
  id: Scalars['ID']['input'];
  orderDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
};


export type QueryOrderArgs = {
  id: Scalars['ID']['input'];
};


export type QueryOrdersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  kind?: InputMaybe<OrdersEnumFilter>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryParcelDeliveryOrderArgs = {
  id: Scalars['ID']['input'];
};


export type QueryParcelDeliveryOrdersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryPendingReviewsArgs = {
  orderId?: InputMaybe<Scalars['ID']['input']>;
};


export type QueryStorefrontActiveHotspotsArgs = {
  currentTime: Scalars['String']['input'];
};


export type QueryStorefrontCheckoutConfigArgs = {
  currentTime: Scalars['String']['input'];
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type QueryStorefrontHotspotArgs = {
  currentTime: Scalars['String']['input'];
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type QueryUniversitiesArgs = {
  status?: InputMaybe<Scalars['String']['input']>;
};

export type Review = {
  __typename?: 'Review';
  amountOfFoodRating: Scalars['Int']['output'];
  averageRating?: Maybe<Scalars['Int']['output']>;
  body: Scalars['String']['output'];
  createdAt: Scalars['ISO8601Date']['output'];
  customer: Customer;
  id: Scalars['ID']['output'];
  ingredientsRating: Scalars['Int']['output'];
  rating?: Maybe<Scalars['Int']['output']>;
  sauceRating: Scalars['Int']['output'];
  spiceRating: Scalars['Int']['output'];
  tasteRating: Scalars['Int']['output'];
};

/** The connection type for Review. */
export type ReviewConnection = {
  __typename?: 'ReviewConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ReviewEdge>>>;
  /** A list of nodes. */
  nodes?: Maybe<Array<Maybe<Review>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** An edge in a connection. */
export type ReviewEdge = {
  __typename?: 'ReviewEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Review>;
};

/** Autogenerated input type of SetAddressWeb */
export type SetAddressWebInput = {
  city: CityEnum;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of SetAddressWeb */
export type SetAddressWebPayload = {
  __typename?: 'SetAddressWebPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors: Array<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export type Settings = {
  __typename?: 'Settings';
  costPerMile: Scalars['Float']['output'];
  creditCardFee: Scalars['Float']['output'];
  creditCardVariableFee: Scalars['Float']['output'];
  deliveryFee: Scalars['String']['output'];
  deliveryFeeAmount: Scalars['Float']['output'];
  fixedCost: Scalars['Float']['output'];
  fixedRevenue: Scalars['Float']['output'];
  globalUpchargeRate: Scalars['Float']['output'];
  inviteeReward: Scalars['Float']['output'];
  referralReward: Scalars['Float']['output'];
  welcomeScreenOffAmount: Scalars['Float']['output'];
};

/** Attributes for signing in as a guest, from mobile app */
export type SignInMobileGuest = {
  deviceOs: DeviceOsEnumFilter;
  fcmDeviceToken: Scalars['String']['input'];
  /** Referrer token */
  referrerToken?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of SignInMobileGuest */
export type SignInMobileGuestInput = {
  attributes: SignInMobileGuest;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of SignInMobileSMS */
export type SignInMobileSmsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  fcmDeviceToken: Scalars['String']['input'];
  mobilePhone: Scalars['String']['input'];
  name: Scalars['String']['input'];
  verificationCode: Scalars['String']['input'];
};

/** Attributes for signing in as customer, when using web via sms code */
export type SignInWeb = {
  browserFingerprint: Scalars['String']['input'];
  email?: InputMaybe<Scalars['String']['input']>;
  mobilePhone?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  /** Referrer token */
  referrerToken?: InputMaybe<Scalars['String']['input']>;
  verificationCode: Scalars['String']['input'];
};

/** Autogenerated input type of SignInWeb */
export type SignInWebInput = {
  attributes: SignInWeb;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of SignOut */
export type SignOutInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  fcmDeviceToken: Scalars['String']['input'];
};

/** Steps in the sign-up process */
export enum SignUpStepEnum {
  /** Complete fast sign-up */
  CompleteFastSignup = 'COMPLETE_FAST_SIGNUP',
  /** Complete sign-up */
  CompleteSignup = 'COMPLETE_SIGNUP',
  /** Verify Email step */
  VerifyEmail = 'VERIFY_EMAIL',
  /** Verify Email OTP step */
  VerifyEmailOtp = 'VERIFY_EMAIL_OTP',
  /** Verify Phone step */
  VerifyPhone = 'VERIFY_PHONE',
  /** Verify SMS OTP step */
  VerifySmsOtp = 'VERIFY_SMS_OTP'
}

/** Attributes for sign up process */
export type SignUpWeb = {
  address?: InputMaybe<Scalars['String']['input']>;
  addressType?: InputMaybe<Scalars['String']['input']>;
  browserFingerprint?: InputMaybe<Scalars['String']['input']>;
  dietaryPreferences?: InputMaybe<Array<Scalars['String']['input']>>;
  email?: InputMaybe<Scalars['String']['input']>;
  favoriteCuisines?: InputMaybe<Array<Scalars['String']['input']>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  isStudent?: InputMaybe<Scalars['Boolean']['input']>;
  mobilePhone?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  occupation?: InputMaybe<Scalars['String']['input']>;
  otherCuisine?: InputMaybe<Scalars['String']['input']>;
  otherDietaryPreference?: InputMaybe<Scalars['String']['input']>;
  selectedCityValue?: InputMaybe<Scalars['String']['input']>;
  step: SignUpStepEnum;
  typedUniversity?: InputMaybe<Scalars['String']['input']>;
  universityId?: InputMaybe<Scalars['String']['input']>;
  verificationCode?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of SignUpWeb */
export type SignUpWebInput = {
  attributes: SignUpWeb;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

export type SignUpWebResult = {
  __typename?: 'SignUpWebResult';
  customer?: Maybe<Customer>;
  message: Scalars['String']['output'];
  success: Scalars['Boolean']['output'];
};

/** Attributes for signing in as customer, when using web via social login */
export type SocialSignInWeb = {
  accessToken: Scalars['String']['input'];
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  provider: Scalars['String']['input'];
  /** Referrer token */
  referrerToken?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of SocialSignInWeb */
export type SocialSignInWebInput = {
  attributes: SocialSignInWeb;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

export type SocialSignInWebResult = {
  __typename?: 'SocialSignInWebResult';
  errors?: Maybe<Array<Error>>;
  id?: Maybe<Scalars['ID']['output']>;
  isFirstOrderPaid: Scalars['Boolean']['output'];
  jwtToken?: Maybe<Scalars['String']['output']>;
  signedUp: Scalars['Boolean']['output'];
};

export type StatusHistory = {
  __typename?: 'StatusHistory';
  newStatus: Scalars['String']['output'];
  oldStatus: Scalars['String']['output'];
  performedAt: Scalars['ISO8601DateTime']['output'];
  performedBy: Scalars['String']['output'];
  performerId: Scalars['ID']['output'];
};

export type StorefrontBurqUpOrderDelivery = {
  __typename?: 'StorefrontBurqUpOrderDelivery';
  deliveryEta?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Scalars['String']['output']>;
  fee?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  orderTackingUrl?: Maybe<Scalars['String']['output']>;
  paymentAmount?: Maybe<Scalars['Float']['output']>;
  providerName?: Maybe<Scalars['String']['output']>;
};

export type StorefrontCheckoutConfig = {
  __typename?: 'StorefrontCheckoutConfig';
  credits?: Maybe<Scalars['Float']['output']>;
  donationAmount?: Maybe<Scalars['Float']['output']>;
  hotspotTimesDays: Scalars['JSON']['output'];
  taxRate?: Maybe<Scalars['Float']['output']>;
};

export type StorefrontFaq = {
  __typename?: 'StorefrontFaq';
  answer: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  question: Scalars['String']['output'];
};

export type StorefrontHotspot = {
  __typename?: 'StorefrontHotspot';
  address: Scalars['String']['output'];
  deliveryInstruction?: Maybe<Scalars['String']['output']>;
  hotspotTimesDays: Scalars['JSON']['output'];
  id: Scalars['ID']['output'];
  isTodayClosed: Scalars['Boolean']['output'];
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
  menuSections?: Maybe<Array<StorefrontMenuSection>>;
  name: Scalars['String']['output'];
  newMenuItemRequests?: Maybe<Array<NewMenuItemRequest>>;
  pickupInstruction?: Maybe<Scalars['String']['output']>;
};

export type StorefrontLocateNearestHotspot = {
  __typename?: 'StorefrontLocateNearestHotspot';
  errors?: Maybe<Array<Scalars['String']['output']>>;
  hotspot?: Maybe<StorefrontMinimalHotspot>;
  qouteDetails?: Maybe<Array<Scalars['JSON']['output']>>;
};

export type StorefrontMenuItem = {
  __typename?: 'StorefrontMenuItem';
  allergens?: Maybe<Array<Allergen>>;
  availability: Scalars['Boolean']['output'];
  description?: Maybe<Scalars['String']['output']>;
  dietaryPreference: DietaryPreference;
  highlights?: Maybe<Array<Highlights>>;
  id: Scalars['ID']['output'];
  imageUrl?: Maybe<Scalars['String']['output']>;
  ingredients?: Maybe<Array<Ingredient>>;
  name: Scalars['String']['output'];
  nutritionalInformations?: Maybe<Scalars['JSON']['output']>;
  price: Scalars['Float']['output'];
  videoUrl?: Maybe<Scalars['String']['output']>;
};


export type StorefrontMenuItemImageUrlArgs = {
  variant?: InputMaybe<ImageVariant>;
};

export type StorefrontMenuSection = {
  __typename?: 'StorefrontMenuSection';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  storefrontMenuItems?: Maybe<Array<StorefrontMenuItem>>;
};

export type StorefrontMinimalHotspot = {
  __typename?: 'StorefrontMinimalHotspot';
  address?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type StorefrontOrderItem = {
  __typename?: 'StorefrontOrderItem';
  id: Scalars['ID']['output'];
  price: Scalars['Float']['output'];
  pricePerMeal?: Maybe<Scalars['Float']['output']>;
  quantity: Scalars['Int']['output'];
  storefrontMenuItem: StorefrontMenuItem;
};

/** Attributes for creating or updating a Storefront order item */
export type StorefrontOrderItemAttributes = {
  /** Menu item id */
  menuItemId: Scalars['ID']['input'];
  /** items quantity */
  quantity: Scalars['Int']['input'];
};

export type StorefrontPaymentParamsInput = {
  storefrontOrderId: Scalars['ID']['input'];
  type: OrderTypeEnum;
};

/** Attributes for Storefront Sign In process */
export type StorefrontSignInWeb = {
  browserFingerprint: Scalars['String']['input'];
  email?: InputMaybe<Scalars['String']['input']>;
  mobilePhone?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of StorefrontSignInWeb */
export type StorefrontSignInWebInput = {
  attributes: StorefrontSignInWeb;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Steps in the storefront sign-up process */
export enum StorefrontSignUpStepEnum {
  /** complete customer sign up */
  CompleteSignUp = 'COMPLETE_SIGN_UP',
  /** create new storefrontcustomer */
  CustomerCreation = 'CUSTOMER_CREATION'
}

/** Attributes for Storefront Sign Up Process */
export type StorefrontSignUpWeb = {
  browserFingerprint?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  isStudent?: InputMaybe<Scalars['Boolean']['input']>;
  mobilePhone?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  optInEmail?: InputMaybe<Scalars['Boolean']['input']>;
  optInSms?: InputMaybe<Scalars['Boolean']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  step: StorefrontSignUpStepEnum;
};

/** Autogenerated input type of StorefrontSignUpWeb */
export type StorefrontSignUpWebInput = {
  attributes: StorefrontSignUpWeb;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

export type SupportRequest = {
  __typename?: 'SupportRequest';
  createdAt: Scalars['ISO8601DateTime']['output'];
  email: Scalars['String']['output'];
  helpTopicId: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  message: Scalars['String']['output'];
};

export type SupportRequestResult = {
  __typename?: 'SupportRequestResult';
  errors: Array<Error>;
  success: Scalars['Boolean']['output'];
  supportRequest?: Maybe<SupportRequest>;
};

export type TestimonyDetail = {
  __typename?: 'TestimonyDetail';
  city: Scalars['String']['output'];
  description: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  picture?: Maybe<Scalars['String']['output']>;
  rating: Scalars['Float']['output'];
  video?: Maybe<Scalars['String']['output']>;
};

export type Tips = {
  __typename?: 'Tips';
  defaultTips: Scalars['Float']['output'];
  id: Scalars['ID']['output'];
  maxTips: Scalars['Float']['output'];
  minTips: Scalars['Float']['output'];
};

export enum TipsEnum {
  /** Past orders */
  Default = 'DEFAULT',
  /** Past orders */
  Maxtips = 'MAXTIPS',
  /** Upcoming orders */
  Mintips = 'MINTIPS'
}

/** Attributes for creating parcel delivery order item */
export type UnavailableItems = {
  __typename?: 'UnavailableItems';
  /** Quantity */
  availableQuantity: Scalars['Int']['output'];
  /** Bulk Menu item id */
  bulkMenuItemId: Scalars['ID']['output'];
};

export type University = {
  __typename?: 'University';
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
  name: Scalars['String']['output'];
  state?: Maybe<Scalars['String']['output']>;
  status: Scalars['String']['output'];
  telephone?: Maybe<Scalars['String']['output']>;
  totalEnrollment?: Maybe<Scalars['Int']['output']>;
  website?: Maybe<Scalars['String']['output']>;
  zip?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of UpdateCohort */
export type UpdateCohortInput = {
  attributes: CohortInput;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of UpdateCohort */
export type UpdateCohortPayload = {
  __typename?: 'UpdateCohortPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  cohort?: Maybe<Cohort>;
  errors: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of UpdateCohortScheduler */
export type UpdateCohortSchedulerInput = {
  attributes: CohortSchedulerInput;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of UpdateCohortScheduler */
export type UpdateCohortSchedulerPayload = {
  __typename?: 'UpdateCohortSchedulerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  cohortScheduler?: Maybe<CohortScheduler>;
  errors: Array<Scalars['String']['output']>;
};

/** Attributes for updating a customer */
export type UpdateCustomerAttributes = {
  /** Full Address line */
  address?: InputMaybe<Scalars['String']['input']>;
  /** Email of the customer */
  email?: InputMaybe<Scalars['String']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  /** Mobile phone of the customer */
  mobilePhone?: InputMaybe<Scalars['String']['input']>;
  /** Name of the customer */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Opt in email */
  optInEmail?: InputMaybe<Scalars['Boolean']['input']>;
  /** Opt in sms */
  optInSms?: InputMaybe<Scalars['Boolean']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateDeviceToken */
export type UpdateDeviceTokenInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  newFcmDeviceToken: Scalars['String']['input'];
  oldFcmDeviceToken: Scalars['String']['input'];
};

/** Autogenerated input type of UpdateFollowsSocialMedia */
export type UpdateFollowsSocialMediaInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  followsSocialMedia: Scalars['Boolean']['input'];
};

/** Autogenerated input type of Update */
export type UpdateInput = {
  attributes: UpdateCustomerAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateParcelDeliveryOrder */
export type UpdateParcelDeliveryOrderInput = {
  attributes: ParcelDeliveryOrderAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateStorefrontDeliveryOrder */
export type UpdateStorefrontDeliveryOrderInput = {
  attributes: DeliveryOrderAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateStorefrontPickupOrder */
export type UpdateStorefrontPickupOrderInput = {
  attributes: PickupOrderAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpsertParcelDeliveryOrderReview */
export type UpsertParcelDeliveryOrderReviewInput = {
  attributes: ParcelDeliveryOrderReviewAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

export type UpsertProspectAttributes = {
  email: Scalars['String']['input'];
  latitude: Scalars['Float']['input'];
  longitude: Scalars['Float']['input'];
  receiveAdditionalDiscount: Scalars['Boolean']['input'];
  zipCode: Scalars['String']['input'];
};

/** Autogenerated input type of UpsertProspect */
export type UpsertProspectInput = {
  attributes: UpsertProspectAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of UpsertProspect */
export type UpsertProspectPayload = {
  __typename?: 'UpsertProspectPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  isAvailable: Scalars['Boolean']['output'];
};

export type ValidateParcelDeliveryOrder = {
  __typename?: 'ValidateParcelDeliveryOrder';
  taxRate: Scalars['Float']['output'];
  unavailableItems?: Maybe<Array<UnavailableItems>>;
  warehouseId?: Maybe<Scalars['ID']['output']>;
  zipTaxFetched: Scalars['Boolean']['output'];
};

/** Input for validating parcel delivery order */
export type ValidateParcelDeliveryOrderAttributes = {
  /** List of parcel delivery order items */
  items: Array<ParcelDeliveryOrderItemAttributes>;
  /** Latitude of the delivery address */
  latitude: Scalars['Float']['input'];
  /** Longitude of the delivery address */
  longitude: Scalars['Float']['input'];
  /** Zip code for the delivery address */
  zipCode: Scalars['String']['input'];
};

/** Autogenerated input type of ValidateParcelDeliveryOrder */
export type ValidateParcelDeliveryOrderInput = {
  /** The parcel delivery order validation input */
  attributes: ValidateParcelDeliveryOrderAttributes;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of VerifyCode */
export type VerifyCodeInput = {
  /** Device fingerprint */
  browserFingerprint: Scalars['String']['input'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** customer ID */
  id?: InputMaybe<Scalars['String']['input']>;
  /** code to be verified */
  verificationCode?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of VerifyCode */
export type VerifyCodePayload = {
  __typename?: 'VerifyCodePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  status: Scalars['String']['output'];
};

export type CreateGeneralInqueryMutationVariables = Exact<{
  input: CreateGeneralInqueryInput;
}>;


export type CreateGeneralInqueryMutation = { __typename: 'Mutation', createGeneralInquery?: { __typename: 'CreateGeneralInqueryPayload', success: boolean, errors: Array<string> } | null };

export type CreatePilotProgramInfoMutationVariables = Exact<{
  input: CreatePilotProgramInfoInput;
}>;


export type CreatePilotProgramInfoMutation = { __typename: 'Mutation', createPilotProgramInfo?: { __typename: 'CreatePilotProgramInfoPayload', success: boolean, errors: Array<string> } | null };


export const CreateGeneralInqueryDocument = {"__meta__":{"hash":"9cf64342b1eaf8a8d76cc9e23ecb152196a7f4df"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createGeneralInquery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateGeneralInqueryInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"createGeneralInquery"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"errors"}}]}}]}}]} as unknown as DocumentNode<CreateGeneralInqueryMutation, CreateGeneralInqueryMutationVariables>;
export const CreatePilotProgramInfoDocument = {"__meta__":{"hash":"7b5c701696cd471b5e7555698803bc21ba389850"},"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createPilotProgramInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreatePilotProgramInfoInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"createPilotProgramInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"errors"}}]}}]}}]} as unknown as DocumentNode<CreatePilotProgramInfoMutation, CreatePilotProgramInfoMutationVariables>;